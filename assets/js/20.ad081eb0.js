(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{621:function(l,v,_){"use strict";_.r(v);var t=_(5),i=Object(t.a)({},(function(){var l=this,v=l.$createElement,_=l._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":l.$parent.slotKey}},[_("div",{staticStyle:{width:"100%","font-size":"16px",color:"#d4226a",background:"#f5bebe",padding:"15px","border-radius":"4px"}},[l._v("\n你不必等到非常厉害，才敢开始;    你需要开始，才会变得非常厉害 。🤔️ 🤔️ 🤔️\n")]),l._v(" "),_("p",[l._v("🎈 如有补充或问题请提issues 🎏  我会及时回复~ "),_("br"),l._v("\n🎈 将会持续更新，给个Star 🌟 再走吧~")]),l._v(" "),_("hr"),l._v(" "),_("blockquote",[_("p",[l._v("Q1: call() 和 .apply(), bind()的区别")])]),l._v(" "),_("ul",[_("li",[l._v("相同点\ncall()、apply()、bind() 都是用来重定义 "),_("code",[l._v("this")]),l._v(" 这个对象的，即"),_("code",[l._v("改变函数执行时的上下文")]),l._v("。")]),l._v(" "),_("li",[l._v("call， apply 与bind的区别\ncall() 和 apply() 改变了函数的this上下文后便执行该函数, 而bind() 则是返回改变了上下文后的一个函数。")]),l._v(" "),_("li",[l._v("call从第二个参数开始以参数列表的形式展现，apply则是把除了改变上下文对象的参数放在一个数组里面作为它的第二个参数。")])]),l._v(" "),_("blockquote",[_("p",[l._v("Q2:  Call函数")])]),l._v(" "),_("ul",[_("li",[l._v("实现步骤：")]),l._v(" "),_("li",[l._v("代码实现：")])]),l._v(" "),_("blockquote",[_("p",[l._v("Q3: Apply函数")])]),l._v(" "),_("ul",[_("li",[l._v("实现步骤：")]),l._v(" "),_("li",[l._v("代码实现：")])]),l._v(" "),_("blockquote",[_("p",[l._v("Q4: bind函数")])]),l._v(" "),_("ul",[_("li",[l._v("实现步骤：")]),l._v(" "),_("li",[l._v("代码实现：")])])])}),[],!1,null,null,null);v.default=i.exports}}]);